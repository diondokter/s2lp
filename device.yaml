config:
  default_byte_order: BE
  buffer_address_type: u8
  command_address_type: u8
  register_address_type: u8

fifo:
  type: buffer
  description: The TX and RX fifo. Writing writes to TX, reading reads from RX.
  address: 0xFF

TX:
  type: command
  address: 0x60
  description: |
    Send the S2-LP to TX state for transmission.
    Valid from `READY` and `SYNTH_SETUP`.
RX:
  type: command
  address: 0x61
  description: |
    Send the S2-LP to RX state for reception.
    Valid from `READY` and `SYNTH_SETUP`.
READY:
  type: command
  address: 0x62
  description: |
    Go to READY state.
    Valid from `STANDBY`, `SLEEP` and `LOCK`.
STANDBY:
  type: command
  address: 0x63
  description: |
    Go to STANDBY state.
    Valid from `READY` and `SYNTH_SETUP`.
SLEEP:
  type: command
  address: 0x64
  description: |
    Go to SLEEP state.
    Valid from `READY`, `SYNTH_SETUP` and `WAIT_SLEEP`.
LOCK_RX:
  type: command
  address: 0x65
  description: |
    Go to LOCK state by using the RX configuration of the synthesizer.
    Valid from `READY` and `SYNTH_SETUP`.
LOCK_TX:
  type: command
  address: 0x66
  description: |
    Go to LOCK state by using the TX configuration of the synthesizer.
    Valid from `READY` and `SYNTH_SETUP`.
ABORT:
  type: command
  address: 0x67
  description: |
    Exit from TX or RX states and go to READY state.
    Valid from `TX` and `RX`.
LDC_RELOAD:
  type: command
  address: 0x68
  description: |
    Reload the LDC timer with a pre-programmed value stored in registers.
    Valid from `ANY`.
RESET:
  type: command
  address: 0x70
  description: |
    Reset the S2-LP state machine and registers values.
    Valid from `ANY`.
FLUSH_RX_FIFO:
  type: command
  address: 0x71
  description: |
    Clean the RX FIFO.
    Valid from `ALL`.
FLUSH_TX_FIFO:
  type: command
  address: 0x72
  description: |
    Clean the TX FIFO.
    Valid from `ALL`.
SEQUENCE_UPDATE:
  type: command
  address: 0x73
  description: |
    Reload the packet sequence counter with the value stored in register.
    Valid from `ANY`.

GPIO_CONF:
  type: register
  address: 0x00
  size_bits: 8
  reset_value: 0x0A
  allow_bit_overlap: true
  repeat:
    count: 4
    stride: 1
  fields:
    GPIO_MODE:
      base: uint
      conversion:
        name: GPIO_MODE
        HiZ: 0b00
        Input: 0b01
        OutputLowPower: 0b10
        OutputHighPower: 0b11
      start: 0
      end: 2
    GPIO_SELECT_OUTPUT:
      base: uint
      conversion:
        name: GPIO_SELECT_OUTPUT
        Irq:
          value: 0
          description: nIRQ (interrupt request, active low)
        POR:
          value: 1
          description: POR inverted (active low)
        WakeUpTimerExpiration:
          value: 2
          description: Wake-up timer expiration. `1` when WUT has expired
        LowBatteryDetection:
          value: 3
          description: Low battery detection. `1` when battery is below threshold setting
        TxDataInternalClockOutput:
          value: 4
          description: TX data internal clock output (TX data are sampled on the rising edge of it)
        TxStateCommandInfo:
          value: 5
          description: TX state outputs a command information coming from the RADIO_TX block
        FifoAlmostEmpty:
          value: 6
          description: TX/RX FIFO almost empty flag
        FifoAlmostFull:
          value: 7
          description: TX/RX FIFO almost full flag
        RxDataOutput:
          value: 8
          description: RX data output
        RxClockOutput:
          value: 9
          description: RX clock output (recovered from received data)
        RxState:
          value: 10
          description: RX state indication. `1` when the S2-LP is transiting in the RX state
        DeviceNotSleepOrStandby:
          value: 11
          description: Device in a state other than SLEEP or STANDBY. `0` when in SLEEP/STANDBY
        DeviceStandby:
          value: 12
          description: Device in STANDBY state
        AntennaSwitch:
          value: 13
          description: Antenna switch signal used for antenna diversity
        ValidPreableDetected:
          value: 14
          description: Valid preamble detected flag
        SyncWordDetected:
          value: 15
          description: Sync word detected flag
        RssiThreshold:
          value: 16
          description: RSSI above threshold (same indication of CS register)
        Reserved:
          value: default
          description: Reserved value
        TxOrRxMode:
          value: 18
          description: TX or RX mode indicator (to enable an external range extender)
        VDD:
          value: 19
          description: VDD (to emulate an additional GPIO of the MCU, programmable by SPI)
        GND:
          value: 20
          description: GND (to emulate an additional GPIO of the MCU, programmable by SPI)
        ExternalSmps:
          value: 21
          description: External SMPS enable signal (active high)
        DeviceSleep:
          value: 22
          description: Device in SLEEP state
        DeviceReady:
          value: 23
          description: Device in READY state
        DeviceLock:
          value: 24
          description: Device in LOCK state
        WaitingForLockDetector:
          value: 25
          description: Device waiting for a high level of the lock-detector output signal
        TxDataOok:
          value: 26
          description: TX_DATA_OOK signal (internal control signal generated in the OOK analog smooth mode)
        WaitingForReady2:
          value: 27
          description: Device waiting for a high level of the READY2 signal from XO
        WaitingForPmBlockSettling:
          value: 28
          description: Device waiting for timer expiration to allow PM block settling
        WaitingForEndOfVcoCalibration:
          value: 29
          description: Device waiting for end of VCO calibration
        SynthBlockFullCircuitry:
          value: 30
          description: Device enables the full circuitry of the SYNTH block
      start: 3
      end: 8
    GPIO_SELECT_INPUT:
      base: uint
      conversion:
        name: GPIO_SELECT_INPUT
        TxCommand:
          value: 0
          description: 1 >> TX command
        RxCommand:
          value: 1
          description: 1 >> RX command
        TxDataInput:
          value: 2
          description: TX data input for direct modulation
        Wakeup:
          value: 3
          description: Wake-up from external input (sensor output)
        ExternalClock:
          value: 4
          description: External clock @ 34.7 kHz (used for LDC modes timing)
        NotUsed:
          value: default
          description: Not used
      start: 3
      end: 8
SYNT:
  type: register
  address: 0x05
  size_bits: 32
  reset_value: 0x42162762
  fields:
    PLL_CP_ISEL:
      base: uint
      start: 29
      end: 32
      description: Set the charge pump current according to the XTAL frequency (see Table 37. Table 34).
    BS:
      base: bool
      start: 28
      description: |
        Synthesizer band select. This parameter selects the out-of loop
        divide factor of the synthesizer:
        - false: 4, band select factor for high band
        - true: 8, band select factor for middle band
        (see Section 5.3.1 RF channel frequency settings).
    SYNT:
      base: uint
      start: 0
      end: 28
      description: The PLL programmable divider (see Section 5.3.1 RF channel frequency settings).
IF_OFFSET_ANA:
  type: register
  address: 0x09
  size_bits: 8
  reset_value: 0x2A
  description: "Intermediate frequency setting for the analog RF synthesizer, default: 300 kHz, see Eq. (15)."
  fields:
    value:
      base: uint
      start: 0
      end: 8
IF_OFFSET_DIG:
  type: register
  address: 0x0A
  size_bits: 8
  reset_value: 0xB8
  description: "Intermediate frequency setting for the digital shift-to-baseband circuits, default: 300 kHz, see Eq. (15)."
  fields:
    value:
      base: uint
      start: 0
      end: 8
ChSpace:
  type: register
  address: 0x0C
  size_bits: 8
  reset_value: 0x3F
  description: "Channel spacing setting, see Eq. (16)."
  fields:
    value:
      base: uint
      start: 0
      end: 8
ChNum:
  type: register
  address: 0x0D
  size_bits: 8
  reset_value: 0x00
  description:
    "Channel number. This value is multiplied by the channel spacing
    and added to the synthesizer base frequency to generate the
    actual RF carrier frequency, see Eq. (16)."
  fields:
    value:
      base: uint
      start: 0
      end: 8
MOD4:
  type: register
  address: 0x0E
  size_bits: 16
  reset_value: 0x832B
  description: "The mantissa value of the data rate equation, see Eq. (14)."
  fields:
    value:
      base: uint
      start: 0
      end: 16
MOD2:
  type: register
  address: 0x10
  size_bits: 8
  reset_value: 0x77
  fields:
    ModulationType:
      base: uint
      start: 4
      end: 8
      conversion:
        name: ModulationType
        FSK2:
          value: 0
          description: 2-FSK
        FSK4:
          value: 1
          description: 4-FSK
        GFSK2BT1:
          value: 2
          description: 2-GFSK BT=1
        GFSK4BT1:
          value: 3
          description: 4-GFSK BT=1
        AskOok:
          value: 5
          description: ASK/OOK
        Unmodulated:
          value: 7
          description: Unmodulated
        GFSK2BT0_5:
          value: 10
          description: 2-GFSK BT=0.5
        GFSK4BT0_5:
          value: 11
          description: 4-GFSK BT=0.5
        illegal:
          value: catch_all
          description: Invalid value, do not use
    DATARATE_E:
      base: uint
      start: 0
      end: 4
      description: The exponent value of the data rate equation (see Eq. (14) ).
MOD1:
  type: register
  address: 0x11
  size_bits: 8
  reset_value: 0x03
  fields:
    PA_INTERP_EN:
      base: bool
      start: 7
      description: Enable the PA power interpolator (see Section 5.6.1 PA configuration).
    MOD_INTERP_EN:
      base: bool
      start: 6
      description: Enable frequency interpolator for the GFSK shaping (see Section 5.4.1.1 Gaussian shaping).
    CONST_MAP:
      base: uint
      start: 4
      end: 6
      description: "Select the constellation map for 4-(G)FSK or 2-(G)FSK
        modulations (see Table 41. Constellation mapping 2-(G)FSK and
        Table 42. Constellation mapping 4-(G)FSK)."
    FDEV_E:
      base: uint
      start: 0
      end: 4
      description: "The exponent value of the frequency deviation equation (see Eq. (10))."
MOD0:
  type: register
  address: 0x12
  size_bits: 8
  reset_value: 0x93
  description: "The mantissa value of the frequency deviation equation (see Eq. (10))."
  fields:
    fdev_m:
      base: uint
      start: 0
      end: 8
ChFlt:
  type: register
  address: 0x13
  size_bits: 8
  reset_value: 0x23
  description: "Receiver channel filter"
  fields:
    ChFlt_M:
      base: uint
      start: 4
      end: 8
      description: The mantissa value of the receiver channel filter (see Table 44. Channel filter words).
    ChFlt_E:
      base: uint
      start: 0
      end: 4
      description: The exponent value of the receiver channel filter (see Table 44. Channel filter words).
AFC2:
  type: register
  address: 0x14
  size_bits: 8
  reset_value: 0xC8
  description: Automatic frequency compensation register 2
  fields:
    AFC_FREEZE_ON_SYNC:
      base: bool
      start: 7
      description: Enable the freeze AFC correction upon sync word detection.
    AFC_ENABLED:
      base: bool
      start: 6
      description: Enable the AFC correction.
    AFC_MODE:
      base: uint
      start: 5
      end: 6
      conversion:
        name: AFC_MODE
        ClosedOnSlicer: 0
        ClosedOnSecondConversionStage: 1
AFC1:
  type: register
  address: 0x15
  size_bits: 8
  reset_value: 0x18
  description: Automatic frequency compensation register 1
  fields:
    AFC_FAST_PERIOD:
      base: uint
      start: 0
      end: 8
AFC0:
  type: register
  address: 0x16
  size_bits: 8
  reset_value: 0x25
  description: Automatic frequency compensation register 0
  fields:
    AFC_FAST_GAIN:
      base: uint
      start: 4
      end: 8
      description: The AFC loop gain in fast mode (2's log).
    AFC_SLOW_GAIN:
      base: uint
      start: 0
      end: 4
      description: The AFC loop gain in slow mode (2's log).
RSSI_FLT:
  type: register
  address: 0x17
  size_bits: 8
  reset_value: 0xE3
  description: RSSI filter
  fields:
    RSSI_FLT:
      base: uint
      start: 4
      end: 8
      description: Gain of the RSSI filter.
    CS_MODE:
      base: uint
      start: 2
      end: 4
      description: Carrier sense mode (see Section 5.5.8.2 Carrier sense)
      conversion:
        name: CS_MODE
        StaticCS:
          value: 0b00
          description: Static CS
        DynamicCS6db:
          value: 0b01
          description: Dynamic CS with 6dB dynamic threshold
        DynamicCS12db:
          value: 0b10
          description: Dynamic CS with 12dB dynamic threshold
        DynamicCS18db:
          value: 0b11
          description: Dynamic CS with 18dB dynamic threshold
RSSI_TH:
  type: register
  address: 0x18
  size_bits: 8
  reset_value: 0x28
  description: "Signal detect threshold in 1 dB steps. The RSSI_TH can be
    converted in dBm using the formula RSSI_TH-146."
  fields:
    value:
      base: uint
      start: 0
      end: 8
AgcCtrl4:
  type: register
  address: 0x1A
  size_bits: 8
  reset_value: 0x54
  description: "Automatic gain control 4"
  fields:
    LOW_THRESHOLD_0:
      base: uint
      start: 4
      end: 8
      description: Low threshold 0 for the AGC
    LOW_THRESHOLD_1:
      base: uint
      start: 0
      end: 4
      description: Low threshold 1 for the AGC
AgcCtrl3:
  type: register
  address: 0x1B
  size_bits: 8
  reset_value: 0x10
  description: Automatic gain control 3
  fields:
    LOW_THRESHOLD_SEL:
      base: uint
      start: 0
      end: 8
      description:
        Low threshold selection (defined in the AGCCTRL4). Bitmask for
        each attenuation step.
AgcCtrl2:
  type: register
  address: 0x1C
  size_bits: 8
  reset_value: 0x22
  description: "Automatic gain control 2"
  fields:
    FREEZE_ON_SYNC:
      base: bool
      start: 5
      description: Enable the AGC algorithm to be frozen on SYNC
    MEAS_TIME:
      base: uint
      start: 0
      end: 4
      description: AGC measurement time
AgcCtrl1:
  type: register
  address: 0x1D
  size_bits: 8
  reset_value: 0x59
  description: "Automatic gain control 1"
  fields:
    HIGH_THRESHOLD:
      base: uint
      start: 4
      end: 8
      description: High threshold for the AGC
AgcCtrl0:
  type: register
  address: 0x1E
  size_bits: 8
  reset_value: 0x8C
  description: "Automatic gain control 0"
  fields:
    AGC_ENABLE:
      base: bool
      start: 7
      description: Enable the AGC
    HOLD_TIME:
      base: uint
      start: 0
      end: 6
      description: Hold time for after gain adjustment for the AGC.
ANT_SELECT_CONF:
  type: register
  address: 0x1F
  size_bits: 8
  reset_value: 0x45
  fields:
    EQU_CTRL:
      base: uint
      start: 5
      end: 7
      description: Hold time for after gain adjustment for the AGC.
      try_conversion:
        name: EQU_CTRL
        disabled:
          value: 0b00
          description: Equalization disabled
        single_pass:
          value: 0b01
          description: Single pass equalization
        dual_pass:
          value: 0b10
          description: Dual pass equalization
    CS_BLANKING:
      base: bool
      start: 4
      description:
        Do not fill the RX FIFO with data if the CS is threshold (see
        Section 5.5.9 CS blanking).
    AS_ENABLE:
      base: bool
      start: 3
      description: Enable the antenna switching (see Section 5.5.10 Antenna
        switching).
    AS_MEAS_TIME:
      base: uint
      start: 0
      end: 3
      description: Set the measurement time.
CLOCKREC2:
  type: register
  address: 0x20
  size_bits: 8
  reset_value: 0xC0
  description: Clock recovery 2
  fields:
    CLK_REC_P_GAIN_SLOW:
      base: uint
      start: 5
      end: 8
      description: Clock recovery slow loop gain (log2).
    CLK_REC_ALGO_SEL:
      base: uint
      start: 4
      end: 5
      description: Symbol timing recovery algorithm selection
      conversion:
        name: CLK_REC_ALGO_SEL
        DLL: 0
        PLL: 1
    CLK_REC_I_GAIN_SLOW:
      base: uint
      start: 0
      end: 4
      description:
        Set the integral slow gain for symbol timing recovery (PLL mode
        only).
CLOCKREC1:
  type: register
  address: 0x21
  size_bits: 8
  reset_value: 0x58
  description: Clock recovery 1
  fields:
    CLK_REC_P_GAIN_FAST:
      base: uint
      start: 5
      end: 8
      description: Clock recovery fast loop gain (log2).
    PstFlt_Len:
      base: uint
      start: 4
      end: 5
      description: Post filter length
      conversion:
        name: PstFlt_Len
        symbols8: 0
        symbols16: 1
    CLK_REC_I_GAIN_FAST:
      base: uint
      start: 0
      end: 4
      description:
        Set the integral fast gain for symbol timing recovery (PLL mode
        only).
PcktCtrl6:
  type: register
  address: 0x2B
  size_bits: 16
  reset_value: 0x8010
  description: Packet control 6
  fields:
    SYNC_LEN:
      base: uint
      start: 10
      end: 16
      description: The number of bits used for the SYNC field in the packet.
    PREAMBLE_LEN:
      base: uint
      start: 0
      end: 10
      description: The number of '01 or '10' of the preamble of the
        packet.
PcktCtrl4:
  type: register
  address: 0x2D
  size_bits: 8
  reset_value: 0x00
  description: Packet control 4
  fields:
    LEN_WID:
      base: uint
      start: 7
      end: 8
      description: The number of bytes used for the length field.
      conversion:
        name: LEN_WID
        bytes1: 0
        bytes2: 1
    ADDRESS_LEN:
      base: bool
      start: 3
      description: Include the ADDRESS field in the packet.
PcktCtrl3:
  type: register
  address: 0x2E
  size_bits: 8
  reset_value: 0x20
  description: Packet control 3
  fields:
    PCKT_FRMT:
      base: uint
      start: 6
      end: 8
      description: The number of bytes used for the length field.
      conversion:
        name: PacketFormat
        basic: 0
        ieee802_15_4g: 1
        uart_ota: 2
        stack: 3
    RX_MODE:
      base: uint
      start: 4
      end: 6
      try_conversion:
        name: RX_MODE
        normal: 0
        direct_through_fifo: 1
        direct_through_gpio: 2
    FSK4_SYM_SWAP:
      base: bool
      start: 3
      description: Select the symbol mapping for 4(G)FSK.
    BYTE_SWAP:
      base: bool
      start: 2
      description: Select the transmission order between MSB and LSB.
    PREAMBLE_SEL:
      base: uint
      start: 0
      end: 2
      description: Select the preamble pattern.
PcktCtrl2:
  type: register
  address: 0x2F
  size_bits: 8
  reset_value: 0x00
  description: Packet control 2
  fields:
    FCS_TYPE_4G:
      base: bool
      start: 5
      description: This is the FCS type in header field of 802.15.4g packet.
    FEC_TYPE_4G_OR_STOP_BIT:
      base: bool
      start: 4
      description: |
        - If the 802.15.4 mode is enabled, this is the FCS type in
        header field of 802.15.4g packet. Select the FEC type of
        802.15.4g packet:
          - 0: NRNSC
          - 1: RSC.
        - If the UART packet is enabled, this is the value of the
        STOP_BIT.
    INT_EN_4G_OR_START_BIT:
      base: bool
      start: 3
      description: |
        - If the 802.15.4 mode is enabled, 1: enable the interleaving
        of 802.15.4g packet.
        - If the UART packet is enabled, this is the value of the
        START_BIT.
    MBUS_3OF6_EN:
      base: bool
      start: 2
      description: Enable the 3-out-of-6 encoding/decoding.
    MANCHESTER_EN:
      base: bool
      start: 1
      description: Enable the Manchester encoding/decoding.
    FIX_VAR_LEN:
      base: uint
      start: 0
      end: 1
      description: Packet length mode.
      conversion:
        name: FIX_VAR_LEN
        fixed: 0
        variable:
          value: 1
          description: in variable mode the field LEN_WID of PCKTCTRL3 register must be configured
PcktCtrl1:
  type: register
  address: 0x30
  size_bits: 8
  reset_value: 0x2C
  description: Packet control 1
  fields:
    CRC_MODE:
      base: uint
      start: 5
      end: 8
      try_conversion:
        name: CRC_MODE
        no_crc: 0
        crc_poly_0x07: 1
        crc_poly_0x8005: 2
        crc_poly_0x1021: 3
        crc_poly_0x864CBF: 4
        crc_poly_0x04C011BB7: 5
    WHIT_EN:
      base: bool
      start: 4
      description: Enable the whitening mode.
    TxSource:
      base: uint
      start: 2
      end: 4
      conversion:
        name: TxSource
        normal: 0
        direct_through_fifo: 1
        direct_through_gpio: 2
        pn9: 3
    SECOND_SYNC_SEL:
      base: bool
      start: 1
      description: |
        - In tx mode:
          - false: select the primary SYNC word
          - true: select the secondary SYNC word
        - In rx mode:
          - true: enable the dual SYNC word detection mode
    FEC_EN:
      base: bool
      start: 0
      description: Enable the FEC encoding in TX or the Viterbi decoding in RX.
PcktLen:
  type: register
  address: 0x31
  size_bits: 16
  reset_value: 0x0014
  description: Length of packet in bytes.
  fields:
    value:
      base: uint
      start: 0
      end: 16
SYNC:
  type: register
  address: 0x33
  size_bits: 32
  reset_value: 0x88888888
  description: SYNC word
  fields:
    value:
      base: uint
      start: 0
      end: 32
QI:
  type: register
  address: 0x37
  size_bits: 8
  reset_value: 0x01
  fields:
    SQI_TH:
      base: uint
      start: 5
      end: 8
      description: SQI threshold.
    PQI_TH:
      base: uint
      start: 1
      end: 5
      description: PQI threshold.
    SQI_EN:
      base: bool
      start: 0
      description: Enable the SQI check.
PCKT_PSTMBL:
  type: register
  address: 0x38
  size_bits: 8
  reset_value: 0x00
  description: Set the packet postamble length.
  fields:
    value:
      base: uint
      start: 0
      end: 8
PROTOCOL2:
  type: register
  address: 0x39
  size_bits: 8
  reset_value: 0x40
  fields:
    CS_TIMEOUT_MASK:
      base: bool
      start: 7
      description: Enable the CS value contributes to timeout disabling.
    SQI_TIMEOUT_MASK:
      base: bool
      start: 6
      description: Enable the SQI value contributes to timeout disabling.
    PQI_TIMEOUT_MASK:
      base: bool
      start: 5
      description: Enable the PQI value contributes to timeout disabling.
    TX_SEQ_NUM_RELOAD:
      base: uint
      start: 3
      end: 5
      description:
        TX sequence number to be used when counting reset is required
        using the related command.
    FIFO_GPIO_OUT_MUX_SEL:
      base: bool
      start: 2
      description: |
        - 0: select the almost empty/full control for TX FIFO.
        - 1: select the almost empty/full control for RX FIFO.
    LDC_TIMER_MULT:
      base: uint
      start: 0
      end: 2
      description: Set the LDC timer multiplier factor
      conversion:
        name: LDC_TIMER_MULT
        x1: 0b00
        x2: 0b01
        x4: 0b10
        x8: 0b11
PROTOCOL1:
  type: register
  address: 0x3A
  size_bits: 8
  reset_value: 0x00
  fields:
    LDC_MODE:
      base: bool
      start: 7
      description: Enable the Low Duty Cycle mode.
    LDC_RELOAD_ON_SYNC:
      base: bool
      start: 6
      description: Enable the LDC timer reload mode.
    PIGGYBACKING:
      base: bool
      start: 5
      description: Enable the piggybacking.
    FAST_CS_TERM_EN:
      base: bool
      start: 4
      description: Enable the RX sniff timer.
    SEED_RELOAD:
      base: bool
      start: 3
      description:
        Enable the reload of the back-off random generator seed using
        the value written in the BU_COUNTER_SEED.
    CSMA_ON:
      base: bool
      start: 2
      description: Enable the CSMA channel access mode.
    CSMA_PERS_ON:
      base: bool
      start: 1
      description: Enable the CSMA persistent mode (no back-off cycles).
    AUTO_PCKT_FLT:
      base: bool
      start: 0
      description: Enable the automatic packet filtering control.
PROTOCOL0:
  type: register
  address: 0x3B
  size_bits: 8
  reset_value: 0x08
  fields:
    NMAX_RETX:
      base: uint
      start: 4
      end: 8
      description: "Max. number of re-TX (from 0 to 15)(0: re-transmission is not performed)."
    NACK_TX:
      base: bool
      start: 3
      description: Field NO_ACK=1 on transmitted packet.
    AUTO_ACK:
      base: bool
      start: 2
      description: Enable the automatic acknowledgment if packet received request.
    PERS_RX:
      base: bool
      start: 1
      description: Enable the persistent RX mode.
FIFO_CONFIG3:
  type: register
  address: 0x3C
  size_bits: 8
  reset_value: 0x30
  description: Set the RX FIFO almost full threshold.
  fields:
    RX_AFTHR:
      base: uint
      start: 0
      end: 7
FIFO_CONFIG2:
  type: register
  address: 0x3D
  size_bits: 8
  reset_value: 0x30
  description: Set the RX FIFO almost empty threshold.
  fields:
    RX_AETHR:
      base: uint
      start: 0
      end: 7
FIFO_CONFIG1:
  type: register
  address: 0x3E
  size_bits: 8
  reset_value: 0x30
  description: Set the TX FIFO almost full threshold.
  fields:
    TX_AFTHR:
      base: uint
      start: 0
      end: 7
FIFO_CONFIG0:
  type: register
  address: 0x3F
  size_bits: 8
  reset_value: 0x30
  description: Set the TX FIFO almost empty threshold.
  fields:
    TX_AETHR:
      base: uint
      start: 0
      end: 7
PCKT_FLT_OPTIONS:
  type: register
  address: 0x40
  size_bits: 8
  reset_value: 0x40
  description: Packet filter options
  fields:
    RX_TIMEOUT_AND_OR_SEL:
      base: bool
      start: 6
      description: "Logical Boolean function applied to CS/SQI/PQI values: 1: OR, 0: AND."
    SOURCE_ADDR_FLT:
      base: bool
      start: 4
      description: RX packet accepted if its source field matches with RX_SOURCE_ADDR register
    DEST_VS_BROADCAST_ADDR:
      base: bool
      start: 3
      description: RX packet accepted if its source field matches with
        BROADCAST_ADDR register.
    DEST_VS_MULTICAST_ADDR:
      base: bool
      start: 2
      description: RX packet accepted if its destination address matches with
        MULTICAST_ADDR register.
    DEST_VS_SOURCE_ADDR:
      base: bool
      start: 1
      description: RX packet accepted if its destination address matches with
        RX_SOURCE_ADDR register.
    CRC_FLT:
      base: bool
      start: 0
      description: Packet discarded if CRC is not valid.
PCKT_FLT_GOALS4:
  type: register
  address: 0x41
  size_bits: 8
  reset_value: 0x00
  description: Mask register for source address filtering.
  fields:
    RX_SOURCE_MASK:
      base: uint
      start: 0
      end: 8
PCKT_FLT_GOALS3:
  type: register
  address: 0x42
  size_bits: 8
  reset_value: 0x00
  description: "If dual sync mode enabled: dual SYNC word byte 3, Otherwise RX
    packet source or TX packet destination field."
  fields:
    RX_SOURCE_ADDR_OR_DUAL_SYNC3:
      base: uint
      start: 0
      end: 8
PCKT_FLT_GOALS2:
  type: register
  address: 0x43
  size_bits: 8
  reset_value: 0x00
  description: "If dual sync mode enabled: dual SYNC word byte 2, Broadcast
    address."
  fields:
    BROADCAST_ADDR_OR_DUAL_SYNC2:
      base: uint
      start: 0
      end: 8
PCKT_FLT_GOALS1:
  type: register
  address: 0x44
  size_bits: 8
  reset_value: 0x00
  description: "If dual sync mode enabled: dual SYNC word byte 1, Multicast
    address."
  fields:
    MULTICAST_ADDR_OR_DUAL_SYNC1:
      base: uint
      start: 0
      end: 8
PCKT_FLT_GOALS0:
  type: register
  address: 0x45
  size_bits: 8
  reset_value: 0x00
  description: "If dual sync mode enabled: dual SYNC word byte 0, Tx packet
    source or RX packet destination field."
  fields:
    TX_SOURCE_ADDR_OR_DUAL_SYNC0:
      base: uint
      start: 0
      end: 8
TIMERS5:
  type: register
  address: 0x46
  size_bits: 8
  reset_value: 0x01
  description: Counter for RX timer.
  fields:
    RX_TIMER_CNTR:
      base: uint
      start: 0
      end: 8
TIMERS4:
  type: register
  address: 0x47
  size_bits: 8
  reset_value: 0x00
  description: Prescaler for RX timer.
  fields:
    RX_TIMER_PRESC:
      base: uint
      start: 0
      end: 8
TIMERS3:
  type: register
  address: 0x48
  size_bits: 8
  reset_value: 0x01
  description: Prescaler for wake up timer.
  fields:
    LDC_TIMER_PRESC:
      base: uint
      start: 0
      end: 8
TIMERS2:
  type: register
  address: 0x49
  size_bits: 8
  reset_value: 0x00
  description: Counter for wake up timer.
  fields:
    LDC_TIMER_CNTR:
      base: uint
      start: 0
      end: 8
TIMERS1:
  type: register
  address: 0x4A
  size_bits: 8
  reset_value: 0x01
  description: Prescaler value for reload operation of wake up timer.
  fields:
    LDC_RELOAD_PRSC:
      base: uint
      start: 0
      end: 8
TIMERS0:
  type: register
  address: 0x4B
  size_bits: 8
  reset_value: 0x00
  description: Counter value for reload operation of wake up timer.
  fields:
    LDC_RELOAD_CNTR:
      base: uint
      start: 0
      end: 8
CSMA_CONF3:
  type: register
  address: 0x4C
  size_bits: 16
  reset_value: 0x4C00
  description: "The seed for the random generator used to apply the CSMA algorithm."
  fields:
    BU_CNTR_SEED:
      base: uint
      start: 0
      end: 16
CSMA_CONF1:
  type: register
  address: 0x4E
  size_bits: 8
  reset_value: 0x04
  fields:
    BU_PRSC:
      base: uint
      start: 2
      end: 8
      description: Prescaler value for the back-off unit BU.
    CCA_PERIOD:
      base: uint
      start: 0
      end: 2
      description: Multiplier for the Tcca timer.
CSMA_CONF0:
  type: register
  address: 0x4F
  size_bits: 8
  reset_value: 0x00
  fields:
    CCA_LEN:
      base: uint
      start: 4
      end: 8
      description: The number of time in which the listen operation is performed.
    NBACKOFF_MAX:
      base: uint
      start: 0
      end: 3
      description: Max number of back-off cycles.
IRQ_MASK:
  type: register
  address: 0x50
  size_bits: 32
  reset_value: 0x00000000
  description: "Enable the routing of the interrupt flag on the configured IRQ GPIO."
  fields:
    RX_DATA_READY:
      base: bool
      start: 0
      description: RX data ready
    RX_DATA_DISC:
      base: bool
      start: 1
      description: RX data discarded (upon filtering)
    TX_DATA_SENT:
      base: bool
      start: 2
      description: TX data sent
    MAX_RE_TX_REACH:
      base: bool
      start: 3
      description: Max. re-TX reached
    CRC_ERROR:
      base: bool
      start: 4
      description: CRC error
    TX_FIFO_ERROR:
      base: bool
      start: 5
      description: TX FIFO underflow/overflow error
    RX_FIFO_ERROR:
      base: bool
      start: 6
      description: RX FIFO underflow/overflow error
    TX_FIFO_ALMOST_FULL:
      base: bool
      start: 7
      description: TX FIFO almost full
    TX_FIFO_ALMOST_EMPTY:
      base: bool
      start: 8
      description: TX FIFO almost empty
    RX_FIFO_ALMOST_FULL:
      base: bool
      start: 9
      description: RX FIFO almost full
    RX_FIFO_ALMOST_EMPTY:
      base: bool
      start: 10
      description: RX FIFO almost empty
    MAX_BO_CCA_REACH:
      base: bool
      start: 11
      description: Max. number of back-off during CCA
    VALID_PREAMBLE:
      base: bool
      start: 12
      description: Valid preamble detected
    VALID_SYNC:
      base: bool
      start: 13
      description: Sync word detected
    RSSI_ABOVE_TH:
      base: bool
      start: 14
      description: RSSI above threshold (CS)
    WKUP_TIMEOUT_LDC:
      base: bool
      start: 15
      description: |
        Wake-up timeout in LDCR mode

        The interrupt flag is set (and consequently the interrupt request) only when the XO clock is available for the state
        machine. This time may be delayed compared to the actual timer expiration. However, the real time event can be sensed
        putting the end-of-counting signal on a GPIO output.
    READY:
      base: bool
      start: 16
      description: |
        Ready

        The interrupt flag is set each time the S2-LP goes to READY state and the XO has completed its setting transient (XO
        ready condition detected).
    STANDBY_DELAYED:
      base: bool
      start: 17
      description: STANDBY state switching in progress
    LOW_BATT_LVL:
      base: bool
      start: 18
      description: Low battery level
    POR:
      base: bool
      start: 19
      description: Power-on reset
    RX_TIMEOUT:
      base: bool
      start: 28
      description: RX timer timeout
    RX_SNIFF_TIMEOUT:
      base: bool
      start: 29
      description: Sniff timer timeout
FAST_RX_TIMER:
  type: register
  address: 0x54
  size_bits: 8
  reset_value: 0x28
  description: Sniff timer configuration.
  fields:
    RSSI_SETTLING_LIMIT:
      base: uint
      start: 0
      end: 8
PA_POWER8:
  type: register
  address: 0x5A
  size_bits: 8
  reset_value: 0x01
  description: Output power level for 8th slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER7:
  type: register
  address: 0x5B
  size_bits: 8
  reset_value: 0x0C
  description: Output power level for 7th slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER6:
  type: register
  address: 0x5C
  size_bits: 8
  reset_value: 0x18
  description: Output power level for 6th slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER5:
  type: register
  address: 0x5D
  size_bits: 8
  reset_value: 0x24
  description: Output power level for 5th slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER4:
  type: register
  address: 0x5E
  size_bits: 8
  reset_value: 0x30
  description: Output power level for 4th slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER3:
  type: register
  address: 0x5F
  size_bits: 8
  reset_value: 0x48
  description: Output power level for 3th slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER2:
  type: register
  address: 0x60
  size_bits: 8
  reset_value: 0x60
  description: Output power level for 2nd slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER1:
  type: register
  address: 0x61
  size_bits: 8
  reset_value: 0x00
  description: Output power level for 1st slot.
  fields:
    value:
      base: uint
      start: 0
      end: 7
PA_POWER0:
  type: register
  address: 0x62
  size_bits: 8
  reset_value: 0x47
  fields:
    DIG_SMOOTH_EN:
      base: bool
      start: 7
      description:
        Enable the generation of the internal signal TX_DATA which is
        the input of the FIR. Needed when FIR_EN=1.
    PA_MAXDBM:
      base: bool
      start: 6
      description: Configure the PA to send maximum output power. Power
        ramping is disable with this bit set to 1.
    PA_RAMP_EN:
      base: bool
      start: 5
      description: Enable the power ramping.
    PA_RAMP_STEP_LEN:
      base: uint
      start: 3
      end: 5
      description: "Set the step width (unit: 1/8 of bit period)."
    PA_LEVEL_MAX_IDX:
      base: uint
      start: 0
      end: 3
      description: Final level for power ramping or selected output power index.
PA_CONFIG1:
  type: register
  address: 0x63
  size_bits: 8
  reset_value: 0x03
  fields:
    FIR_CFG:
      base: uint
      start: 2
      end: 4
      description: FIR configuration
      try_conversion:
        name: FIR_CFG
        filtering: 0b00
        ramping: 0b01
        switching:
          value: 0b10
          description: (see Section 5.4.2.1 OOK smoothing)
    FIR_EN:
      base: bool
      start: 1
      description: Enable FIR (see Section 5.4.2.1 OOK smoothing)
PA_CONFIG0:
  type: register
  address: 0x64
  size_bits: 8
  reset_value: 0x8A
  fields:
    PA_DEGEN_TRIM_CODE_TH:
      base: uint
      start: 6
      end: 8
      conversion:
        name: PA_DEGEN_TRIM_CODE_TH
        code_threshold_418: 0b00
        code_threshold_439: 0b01
        code_threshold_465: 0b10
        code_threshold_485: 0b11
    PA_DEGEN_TRIM_CLAMP_VOLTAGE:
      base: uint
      start: 4
      end: 6
      conversion:
        name: PA_DEGEN_TRIM_CLAMP_VOLTAGE
        voltage_0_40: 0b00
        voltage_0_45: 0b01
        voltage_0_50: 0b10
        voltage_0_55: 0b11
    PA_DEGEN_ON:
      base: bool
      start: 3
      description:
        Enables the 'degeneration' mode that introduces a pre-distortion to
        linearize the power control curve.
    SAFE_ASK_CAL:
      base: bool
      start: 2
      description: During a TX operation, enables and starts the digital ASK
        calibrator.
    PA_FC:
      base: uint
      start: 0
      end: 2
      description: PA bessel filter bandwidth (see Section 5.4.2.1 OOK smoothing).
      conversion:
        name: PA_FC
        khz12p5:
          value: 0b00
          description: 12.5 kHz (data rate 16.2 kbps)
        khz25:
          value: 0b01
          description: 25 kHz (data rate 32 kbps)
        khz50:
          value: 0b10
          description: 50 kHz (data rate 62.5 kbps)
        khz100:
          value: 0b11
          description: 100 kHz (data rate 125 kbps)
SYNTH_CONFIG2:
  type: register
  address: 0x65
  size_bits: 8
  reset_value: 0xD0
  fields:
    PLL_PFD_SPLIT_EN:
      base: bool
      start: 2
      description:
        Enables increased DN current pulses to improve linearization of
        CP/PFD (see Table 37. Charge pump words).
VCO_CONFIG:
  type: register
  address: 0x68
  size_bits: 8
  reset_value: 0x03
  fields:
    VCO_CALAMP_EXT_SEL:
      base: bool
      start: 5
      description:
        VCO amplitude calibration is skipped (external amplitude word
        forced on VCO).
    VCO_CALFREQ_EXT_SEL:
      base: bool
      start: 4
      description: VCO frequency calibration is skipped (external amplitude
        word forced on VCO).
XO_RCO_CONF1:
  type: register
  address: 0x6C
  size_bits: 8
  reset_value: 0x45
  fields:
    PD_CLKDIV:
      base: bool
      start: 4
      description:
        Disable both dividers of digital clock (and reference clock for the
        SMPS) and IF-ADC clock.
XO_RCO_CONF0:
  type: register
  address: 0x6D
  size_bits: 8
  reset_value: 0x30
  fields:
    EXT_REF:
      base: uint
      start: 7
      end: 8
      conversion:
        name: EXT_REF
        XO: 0
        XIN: 1
    GM_CONF:
      base: uint
      start: 4
      end: 7
      description: Set the driver gm of the XO at start up.
    REFDIV:
      base: bool
      start: 3
      description: Enable the the reference clock divider.
    EXT_RCO_OSC:
      base: bool
      start: 1
      description: The 34.7 kHz signal must be supplied from any GPIO.
    RCO_CALIBRATION:
      base: bool
      start: 0
      description: Enable the automatic RCO calibration.
RCO_CALIBR_CONF3:
  type: register
  address: 0x6E
  size_bits: 16
  reset_value: 0x704D
  fields:
    RWT_IN:
      base: uint
      start: 12
      end: 16
      description: RWT word value for the RCO.
    RFB_IN:
      base: uint
      start: 7
      end: 12
      description: Part of RFB word value for RCO.
PM_CONF4:
  type: register
  address: 0x75
  size_bits: 8
  reset_value: 0x17
  fields:
    EXT_SMPS:
      base: bool
      start: 5
      description: Disable the internal SMPS.
PM_CONF3:
  type: register
  address: 0x76
  size_bits: 16
  reset_value: 0x2000
  fields:
    KRM_EN:
      base: bool
      start: 15
      description: |
        - 0: divider by 4 enabled (SMPS' switching frequency is
        FSW=Fdig/4)
        - 1: rate multiplier enabled (SMPS' switching frequency is
        FSW=KRM*Fdig/(2^15).
    KRM:
      base: uint
      start: 0
      end: 15
      description: "Sets the divider ratio of the rate multiplier (default: Fsw=Fdig/4)"
PM_CONF1:
  type: register
  address: 0x78
  size_bits: 8
  reset_value: 0x39
  fields:
    BATTERY_LVL_EN:
      base: bool
      start: 6
      description: Enable battery level detector circuit.
    SET_BLD_TH:
      base: uint
      start: 4
      end: 6
      description: Set the battery level detector threshold
      conversion:
        name: SET_BLD_TH
        v2_7:
          value: 0b00
          description: "2.7V"
        v2_5:
          value: 0b01
          description: "2.5V"
        v2_3:
          value: 0b10
          description: "2.3V"
        v2_1:
          value: 0b11
          description: "2.1V"
    SMPS_LVL_MODE:
      base: bool
      start: 3
      description: |
        - 0: SMPS output level depends upon the value written in
        the PM_CONFIG0 register (SET_SMPS_LEVEL field) both
        in RX and TX state.
        - 1: SMPS output level depends upon the value in
        PM_CONFIG register just in TX state, while in RX state it
        is fixed to 1.4 V
    BYPASS_LDO:
      base: bool
      start: 2
      description: Set to 0 (default value)
PM_CONF0:
  type: register
  address: 0x79
  size_bits: 8
  reset_value: 0x42
  fields:
    SET_SMPS_LVL:
      base: uint
      start: 4
      end: 7
      description: SMPS output voltage
      try_conversion:
        name: SET_SMPS_LVL
        v1_2:
          value: 0b001
          description: "1.2V"
        v1_3:
          value: 0b010
          description: "1.3V"
        v1_4:
          value: 0b011
          description: "1.4V"
        v1_5:
          value: 0b100
          description: "1.5V"
        v1_6:
          value: 0b101
          description: "1.6V"
        v1_7:
          value: 0b110
          description: "1.7V"
        v1_8:
          value: 0b111
          description: "1.8V"
    SLEEP_MODE_SEL:
      base: uint
      start: 0
      end: 1
      description: "Select whether to retain the fifo in sleep"
      conversion:
        name: SLEEP_MODE_SEL
        without_fifo_retention:
          value: 0
          description: Sleep A
        with_fifo_retention:
          value: 1
          description: Sleep B
MC_STATE1:
  type: register
  access: RO
  address: 0x8D
  size_bits: 8
  reset_value: 0x52
  fields:
    RCO_CAL_OK:
      base: bool
      start: 4
      description: RCO calibration successfully terminated.
    ANT_SEL:
      base: bool
      start: 3
      description: Currently selected antenna.
    TX_FIFO_FULL:
      base: bool
      start: 2
      description: TX FIFO is full.
    RX_FIFO_EMPTY:
      base: bool
      start: 1
      description: RX FIFO is empty.
    ERROR_LOCK:
      base: bool
      start: 0
      description: RCO calibrator error.
MC_STATE0:
  type: register
  access: RO
  address: 0x8E
  size_bits: 8
  reset_value: 0x07
  fields:
    STATE:
      base: uint
      start: 1
      end: 8
      description: Current state
      try_conversion:
        name: STATE
        STANDBY:
          value: 0x02
          description: No wake-up timer active
        SLEEP_A:
          value: 0x01
          description: Wake-up timer active, no FIFO retention
        SLEEP_B:
          value: 0x03
          description: Wake-up timer active, FIFO retention
        READY:
          value: 0x00
          description: Radio in ready state
        LOCKST:
          value: 0x14
          description: Error state due to a failure in LOCK operation
        LOCKON:
          value: 0x0C
          description: High precision LO signal available
        RX:
          value: 0x30
          description: Radio in receiver mode
        TX:
          value: 0x5C
          description: Radio in transmitter mode
        SYNTH_SETUP:
          value: 0x50
          description: Non desirable state reached when a pair
            of SABORT and RX (or TX) commands
            are sent during SLEEP state and before
            sending the READY command
        WAIT_SLEEP:
          value: 0x7C
          description: State entered if, in LDC RX mode, at
            least one interrupt is generated at the
            end of the RX cycle
    XO_ON:
      base: bool
      start: 0
      description: XO is operating.
TX_FIFO_STATUS:
  type: register
  access: RO
  address: 0x8F
  size_bits: 8
  reset_value: 0x00
  description: Number of elements in TX FIFO.
  fields:
    N_ELEM_TXFIFO:
      base: uint
      start: 0
      end: 8
      description: Number of elements in TX FIFO.
RX_FIFO_STATUS:
  type: register
  access: RO
  address: 0x90
  size_bits: 8
  reset_value: 0x00
  description: Number of elements in RX FIFO.
  fields:
    N_ELEM_RXFIFO:
      base: uint
      start: 0
      end: 8
      description: Number of elements in RX FIFO.
RCO_CALIBR_OUT4:
  type: register
  access: RO
  address: 0x94
  size_bits: 8
  reset_value: 0x70
  fields:
    RWT_OUT:
      base: uint
      start: 4
      end: 8
      description: RWT word from internal RCO calibrator.
    RFB_OUT:
      base: uint
      start: 0
      end: 4
      description: RFB word (MSB [4:1]) from internal RCO calibrator.
RCO_CALIBR_OUT3:
  type: register
  access: RO
  address: 0x95
  size_bits: 8
  reset_value: 0x00
  fields:
    RFB_OUT:
      base: uint
      start: 4
      end: 8
      description: RFB word (LSB [0]) from internal RCO calibrator.
VCO_CALIBR_OUT1:
  type: register
  access: RO
  address: 0x99
  size_bits: 8
  reset_value: 0x00
  fields:
    VCO_CAL_AMP_OUT:
      base: uint
      start: 0
      end: 4
      description:
        VCO magnitude calibration output word (binary coding internally
        converted from thermometric coding).
VCO_CALIBR_OUT0:
  type: register
  access: RO
  address: 0x9A
  size_bits: 8
  reset_value: 0x00
  fields:
    VCO_CAL_FREQ_OUT:
      base: uint
      start: 0
      end: 7
      description: VCO Cbank frequency calibration output word (binary coding
        internally converted from thermometric coding).
TX_PCKT_INFO:
  type: register
  access: RO
  address: 0x9C
  size_bits: 8
  reset_value: 0x00
  fields:
    TX_SEQ_NUM:
      base: uint
      start: 4
      end: 6
      description: Current TX packet sequence number.
    N_RETX:
      base: uint
      start: 0
      end: 4
      description: Number of re-transmissions done for the last TX packet.
RX_PCKT_INFO:
  type: register
  access: RO
  address: 0x9D
  size_bits: 8
  reset_value: 0x00
  fields:
    NACK_RX:
      base: bool
      start: 2
      description: NACK field of the received packet.
    RX_SEQ_NUM:
      base: uint
      start: 0
      end: 2
      description: Sequence number of the received packet.
AFC_CORR:
  type: register
  access: RO
  address: 0x9E
  size_bits: 8
  reset_value: 0x00
  description: AFC corrected value.
  fields:
    value:
      base: uint
      start: 0
      end: 8
LINK_QUALIF2:
  type: register
  access: RO
  address: 0x9F
  size_bits: 8
  reset_value: 0x00
  description: PQI value of the received packet.
  fields:
    PQI:
      base: uint
      start: 0
      end: 8
      description: PQI value of the received packet.
LINK_QUALIF1:
  type: register
  access: RO
  address: 0xA0
  size_bits: 8
  reset_value: 0x00
  fields:
    CS:
      base: bool
      start: 7
      description: Carrier sense indication.
    SQI:
      base: uint
      start: 0
      end: 7
      description: SQI value of the received packet.
RSSI_LEVEL:
  type: register
  access: RO
  address: 0xA2
  size_bits: 8
  reset_value: 0x00
  description:
    RSSI level captured at the end of the SYNC word detection of the
    received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
RX_PCKT_LEN:
  type: register
  access: RO
  address: 0xA4
  size_bits: 16
  reset_value: 0x0000
  description: The length of the packet received.
  fields:
    value:
      base: uint
      start: 0
      end: 16
CRC_FIELD3:
  type: register
  access: RO
  address: 0xA6
  size_bits: 8
  reset_value: 0x00
  description: CRC field 3 of the received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
CRC_FIELD2:
  type: register
  access: RO
  address: 0xA7
  size_bits: 8
  reset_value: 0x00
  description: CRC field 2 of the received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
CRC_FIELD1:
  type: register
  access: RO
  address: 0xA8
  size_bits: 8
  reset_value: 0x00
  description: CRC field 1 of the received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
CRC_FIELD0:
  type: register
  access: RO
  address: 0xA9
  size_bits: 8
  reset_value: 0x00
  description: CRC field 0 of the received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
RX_ADDRE_FIELD1:
  type: register
  access: RO
  address: 0xAA
  size_bits: 8
  reset_value: 0x00
  description: Source address field of the received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
RX_ADDRE_FIELD0:
  type: register
  access: RO
  address: 0xAB
  size_bits: 8
  reset_value: 0x00
  description: Destination address field of the received packet.
  fields:
    value:
      base: uint
      start: 0
      end: 8
RSSI_LEVEL_RUN:
  type: register
  access: RO
  address: 0xEF
  size_bits: 8
  reset_value: 0x00
  description:
    RSSI level of the received packet, which supports continuous fast
    SPI reading.
  fields:
    value:
      base: uint
      start: 0
      end: 8
DEVICE_INFO1:
  type: register
  access: RO
  address: 0xF0
  size_bits: 8
  reset_value: 0x03
  description: S2-LP part number
  fields:
    PARTNUM:
      base: uint
      start: 0
      end: 8
DEVICE_INFO0:
  type: register
  access: RO
  address: 0xF1
  size_bits: 8
  reset_value: 0xC1
  description: S2-LP version number
  fields:
    VERSION:
      base: uint
      start: 0
      end: 8
IRQ_STATUS:
  type: ref
  target: IRQ_MASK
  description: Interrupt status register
  override:
    type: register
    access: RO
    address: 0xFA
    reset_value: 0x00090500
